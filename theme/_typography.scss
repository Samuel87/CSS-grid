.uppercase {
    text-transform: uppercase;
}

.capitalize {
    text-transform: capitalize;
}

.lowercase {
    text-transform: lowercase;
}


.underline {
    text-decoration: underline;
}

.no-underline {
    text-decoration: none;

    &:hover {
        text-decoration: none;
    }
}


.italic {
    font-style: italic;
}


.font-light {
    font-weight: 300;
}

.font-normal {
    font-weight: 400;
}

.font-medium {
    font-weight: 500;
}

.font-semibold {
    font-weight: 600;
}

b,
strong,
.font-bold {
    font-weight: 700;
}

.font-extrabold {
    font-weight: 800;
}


.break-word {
    word-break: break-word;
}

.whitespace-nowrap {
    white-space: nowrap;
}

.whitespace-normal {
    white-space: normal;
}

.truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}


@mixin make-type-classes($size: '') {
    .#{$size}display-h1 {
        font-size: get('heading.size.h1-display', $font);
    }

    .#{$size}font-h1 {
        font-size: get('heading.size.h1', $font);
    }

    .#{$size}font-h2 {
        font-size: get('heading.size.h2', $font);
    }

    .#{$size}font-h3 {
        font-size: get('heading.size.h3', $font);
    }

    .#{$size}font-h4 {
        font-size: get('heading.size.h4', $font);
    }


    .#{$size}font-2xl {
        font-size: get('text.size.2xl', $font);
    }

    .#{$size}font-xl {
        font-size: get('text.size.xl', $font);
    }

    .#{$size}font-lg {
        font-size: get('text.size.lg', $font);
    }

    .#{$size}font-base {
        font-size: get('text.size.base', $font);
    }

    .#{$size}font-sm {
        font-size: get('text.size.sm', $font);
    }

    .#{$size}font-xs {
        font-size: get('text.size.xs', $font);
    }
}


@include make-type-classes();

@each $key, $mq in $mq-map {
    @media (min-width: map-get($mq, 'breakpoint')) {
        @include make-type-classes(map-get($mq, 'class-prefix'));
    }
}
